sfr用于将一个单片机的特殊功能寄存器(special function register)赋值给一个变量，这样在后面的程序中就可以中这个变量指引(refer to)该寄存器。 

sbit与sfr用法类似，只是sbit是位操作，用于将某个sfr中具体位赋值给一个变量，这样后面程序就可用通过该变量为该位清0或置1。

STC该系列单片机的特殊功能寄存器布局如下：



看过图1这么多特殊功能寄存器之后可能会产生一些困扰，我们用sfr P0 = 0×80表示P0，用sfr SP = 0×81表示SP，这个没有歧义。有困扰的是：假如用sbit P0_1 = 0×81表示P0口的第一位，那么我想表示SP寄存器的第0位怎么办呢？如果也是定义成sbit SP_0 = 0×81那么明显会有二义性，编译器理解不了。其实这个问题是不存在的，从图1中可以看出，SFR又可以分为两个区域：可位寻址区和不可位寻址区。可位寻址区的寄存器地址能够被8整除，而不可位寻址区的寄存器地址不满足这一要求。因此例子中的sbit SP_0 = 0×81对于SP寄存器这是无效的应该写成sfr SP=0x81。
例如：sbit P1^1=0x81;sfr SP=0x81;
它们虽然都引用了同一个地址0×81，但是对于编译器来说，这两者的含义完全不同，前者因为有sfr关键字，所以是字节地址。后者因为是sbit关键字，所以是位寻址，表示的是一个bit。

